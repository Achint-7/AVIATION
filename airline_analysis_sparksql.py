# -*- coding: utf-8 -*-
"""Airline_Analysis_SparkSQL.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z7wZXgbFrRtdJKOoG0mXMDCo2urc05yq

# Spark SQL & A Simple Project Analyzing Airline Dataset using Spark SQL

Spark SQL is a module in Apache Spark that provides a programming interface for relational data processing. It allows users to query structured and semi-structured data using SQL (Structured Query Language) as well as Spark's native APIs. Spark SQL supports reading data from various structured sources, such as Hive tables, Parquet, Avro, ORC, JSON, and relational databases, and enables users to perform complex data manipulations and analyses.

Here are some key aspects of Spark SQL:

1. **Unified Data Processing:**
   - Spark SQL unifies the relational data processing capabilities of SQL with the procedural and object-oriented programming capabilities of Spark, providing a seamless interface for both.

2. **DataFrame API:**
   - Spark SQL introduces the concept of a DataFrame, which is an immutable distributed collection of data organized into named columns. It represents a table of data with rows and columns and can be manipulated using a functional programming style.

3. **Spark Session:**
   - Spark SQL requires a `SparkSession` to be created, which is the entry point for reading data, executing SQL queries, and working with DataFrames. The `SparkSession` incorporates Spark Context, SQLContext, and HiveContext, providing a unified entry point for Spark functionality.

4. **SQL Queries:**
   - Spark SQL allows users to execute SQL queries on DataFrames. Users can express their transformations and analyses using SQL, making it easy for those familiar with SQL to work with big data in Spark.

5. **Data Sources:**
   - Spark SQL supports a variety of data sources for reading and writing data. Common data sources include Parquet, Avro, ORC, JSON, Hive, and relational databases like MySQL, PostgreSQL, and more.

6. **Catalyst Optimizer:**
   - The Catalyst optimizer is a key component of Spark SQL. It performs various optimizations on the logical and physical execution plans generated during query processing. This includes predicate pushdown, constant folding, and other rule-based optimizations.

7. **Tungsten Execution Engine:**
   - Spark SQL leverages the Tungsten execution engine, a physical query execution framework that improves performance by generating optimized bytecode for tasks like filtering, aggregation, and sorting.

8. **Hive Integration:**
   - Spark SQL provides integration with Apache Hive, enabling users to run Hive queries, access Hive UDFs (User-Defined Functions), and work with existing Hive tables seamlessly.

Here's a simple example of using Spark SQL to execute a SQL query:

```python
from pyspark.sql import SparkSession

# Create a Spark session
spark = SparkSession.builder.appName("SparkSQLExample").getOrCreate()

# Read a CSV file into a DataFrame
df = spark.read.option("header", True).csv("example.csv")

# Register the DataFrame as a temporary SQL table
df.createOrReplaceTempView("myTable")

# Execute a SQL query
result = spark.sql("SELECT * FROM myTable WHERE age > 25")

# Show the result
result.show()
```

In this example, a DataFrame is created from a CSV file, registered as a temporary table, and then a SQL query is executed on that table using `spark.sql()`.

**STEPS TO BE NOTED**
1. INSTALL PANDASQL, PYSPARK
2. DOWNLOAD DATASET FROM KAGGLE/DATAFUL/GITHUB
3. EXPLORE THE DATASET
4. THERE YOU GO!!
5. FINDING ANSWERS TO ALL YOUR QUESTIONS

**PROBLEM STATEMENTS ADDRESSED IN THIS PROJECT**

1. FIND THE LIST OF UNQIUE AIRLINES IN WORLD
2. FIND THE LIST OF UNIQUE AIRLINES IN INDIA
3. LIST OF AIRLINES OPERATING WITH CODE SHARE
4. LIST OF ACTIVE AIRLINES IN INDIA

**INSTALLING PACKAGES & LIBRARIES**
"""

#INSTALLING PACKAGES

!pip install pyspark
!pip install pandasql

#IMPORTING LIBRARIES

import pandas as pd
from pyspark.sql import SparkSession
from pyspark.sql import functions as F
from pyspark.sql import *

#START SPARK SESSION

spark = SparkSession.builder.getOrCreate()

"""**DOWNLOADING DATASET**"""

!git clone https://github.com/Achint-7/AVIATION/blob/main/cleaned_airlines_data.csv
#Time period of above dataset is 2010-2023

"""VIEWING OF AIRLINES DATA SET"""

df = spark.read.option("header", True).csv("/content/cleaned_airlines_data.csv")

# Adjust PySpark configuration to display all rows
spark.conf.set("spark.sql.repl.eagerEval.enabled", True)

df.show()
#BY DEFAULT SHOW() DISPLAYS 20 ROWS ONLY. TO DISPLAY N ROWS USE "df.show(N)"

"""**DATA EXPLORATION**"""

#TO CALCULATE TOTAL NUMBER OF ROWS AND COLUMNS
#Total number of rows
df.count()

#Total number of columns
len(df.columns)

#TO CHECK THE DATA TYPE OF EACH COLOUMN
df.printSchema()

"""AS THE ABOVE DATA TYPE IS STRING FOR ALL, WE CAN ALTER THE DATA TYPE BY DEFINING SCHEMA PRIOR STORING IT IN df

schema = StructType() \
        .add("ID", IntegerType(),True) \
        .add("Name", StringType(), True) \
        .add("Alias", StringType(), True) \
        .add("IATA", StringType(), True) \
        .add("ICAO", StringType(), True) \
        .add("Callsign", StringType(), True) \
        .add("Country", StringType(), True) \
        .add("Active", StringType(), True) \

# PROBLEM STATEMENTS

Problem Statement : Find the list of unique Airlines in the world and unique airlines in India
"""

unique_airlines_world = df.select("Name", "Country").distinct()
print("Unique Airlines in the World:")
unique_airlines_world.show()

unique_airlines_india = df.filter(df.Country == "India").select("Name").distinct()
print("Unique Airlines in India:")
unique_airlines_india.show(truncate=False)

"""Problem Statement : List of Airlines operating with code share"""

code_share_airlines = df.filter(df["Alias"].isNotNull())
print("Airlines operating with Code Share:")
code_share_airlines.show(truncate=False)

"""Problem Statement : Find the list of Active Airlines in India state

"""

active_airlines_india = df.filter((df.Country == "India") & (df.Active == "Y")).select("Name")
print("\nActive Airlines in India:")
active_airlines_india.show()